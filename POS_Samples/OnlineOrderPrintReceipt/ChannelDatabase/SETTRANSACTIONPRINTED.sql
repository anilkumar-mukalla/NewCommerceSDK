DROP PROCEDURE IF EXISTS [ext].[SETTRANSACTIONPRINTED];
GO

CREATE PROCEDURE [ext].[SETTRANSACTIONPRINTED]
	@s_TRANSACTIONID [nvarchar](44),
	@s_STORE [nvarchar](10),
	@bi_CHANNEL [bigint],
	@s_TERMINAL [nvarchar](10),
	@s_DATAAREAID [nvarchar](4),
	@i_ISRECEIPTPRIENTED [int]
AS
BEGIN
    SET NOCOUNT ON

	MERGE INTO [ext].[CONTOSORETAILTRANSACTIONTABLE] AS Target
	USING (SELECT
	    @s_TRANSACTIONID AS TRANSACTIONID,
	    @s_STORE         AS STORE,
	    @bi_CHANNEL      AS CHANNEL,
	    @s_TERMINAL      AS TERMINAL,
	    @s_DATAAREAID    AS DATAAREAID,
		@i_ISRECEIPTPRIENTED as ISRECEIPTPRIENTED) AS Source
	ON Target.TRANSACTIONID = Source.TRANSACTIONID AND
	   Target.STORE         = Source.STORE         AND
	   Target.CHANNEL       = Source.CHANNEL       AND
	   Target.TERMINAL      = Source.TERMINAL      AND
	   Target.DATAAREAID    = Source.DATAAREAID   
	WHEN MATCHED THEN 
        UPDATE SET Target.ISRECEIPTPRINTED = @i_ISRECEIPTPRIENTED
    WHEN NOT MATCHED BY TARGET THEN 
        INSERT (TRANSACTIONID, STORE,CHANNEL, TERMINAL, DATAAREAID, ISRECEIPTPRINTED) 
		VALUES (@s_TRANSACTIONID, @s_STORE, @bi_CHANNEL,@s_TERMINAL, @s_DATAAREAID, @i_ISRECEIPTPRIENTED);

END;
GO

GRANT EXECUTE ON [ext].[SETTRANSACTIONPRINTED] TO [UsersRole];
GO

GRANT EXECUTE ON [ext].[SETTRANSACTIONPRINTED] TO [DeployExtensibilityRole];
GO